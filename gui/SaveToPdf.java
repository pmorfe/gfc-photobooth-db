package gui;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import model.CustomerOrder;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * Author: Pippo Morfe
 * Date: 15/11/2013
 * Time: 6:38 PM
 */
public class SaveToPdf {
    private static Font companyName = new Font(Font.FontFamily.TIMES_ROMAN, 24,
            Font.BOLD);
    private static Font companySlogan = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    private static Font normalFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD);
    private static Font detailsBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    private static Font details = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    public void addMetaData(Document document, CustomerOrder customerOrder) {
        document.addTitle("GFC PhotoBooth Invoice");
        //  document.addKeywords("GFC, PDF, iText");
    }

    public void addTitlePage(Document document, CustomerOrder customerOrder)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        Image image = null;
        try {
            image = Image.getInstance("img/gfcLogo.jpg");
            image.scaleAbsolute(100f, 100f);
            image.setAlignment(Image.ALIGN_LEFT);
        } catch (IOException e) {
            e.printStackTrace();
        }
        document.add(image);
        // Lets write a big header
        Phrase invoice = new Phrase();
        invoice.add(new Chunk("Generation For Christ", companyName));
        invoice.add(new Chunk("                                   Invoice", companyName));
        preface.add(new Paragraph(invoice));
        //preface.add(new Paragraph( "));

        preface.add(new Paragraph("                      We Make Disciples", companySlogan));
        // preface.add(new Paragraph( "                Invoice", companyName));
        // addEmptyLine(preface, 1);
        Date date = new Date();
        String dateFormat = new SimpleDateFormat("dd/MM/yyyy").format(date);
        preface.add(new Paragraph("                                                                                                                                         DATE:   " + dateFormat, details));
        preface.add(new Paragraph("25 James Street, Dandenong                                                                                   ORDER ID:    " + customerOrder.getOrderId(), details));
        preface.add(new Paragraph("Melbourne, Victoria, 3175", details));
        preface.add(new Paragraph("Phone # ", details));

        // Will create: Report generated by: _name, _date
        // preface.add(new Paragraph("Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
        //         smallBold));
        // addEmptyLine(preface, 3);
        // preface.add(new Paragraph("This document contains confidential information of GFC's member",
        //         smallBold));

        document.add(preface);
        // Start a new page
        //document.newPage();
    }

    public void addContent(Document document, CustomerOrder customerOrder) throws DocumentException {

        //	Anchor anchor = new Anchor(member.getFname()+"'s Details", catFont);
        //   anchor.setName(member.getFname()+"'s Details");

        // Second parameter is the number of the chapter
        //  Chapter catPart = new Chapter(new Paragraph(anchor),1);

        //Personal Details
        Paragraph personal = new Paragraph("Bill To", subFont);
        //Section personalSection = catPart.addSection(personal);

        Phrase mFname = new Phrase();

        mFname.add(new Chunk(customerOrder.getFname(), details));
        mFname.add(new Chunk("    "));
        mFname.add(new Chunk(customerOrder.getLname(), details));
        personal.add(new Paragraph(mFname));

        Phrase street = new Phrase();
        if ((!customerOrder.getStreet().isEmpty()) && (!customerOrder.getSuburb().isEmpty())) {
            street.add(new Chunk(customerOrder.getStreet() + ", " + customerOrder.getSuburb(), details));
            personal.add(new Paragraph(street));

            Phrase city = new Phrase();

            city.add(new Chunk(customerOrder.getCity() + ", " + customerOrder.getState() + ",  Australia, " + customerOrder.getPostCode(), details));
            personal.add(new Paragraph(city));
        }
        Phrase phone = new Phrase();

        phone.add(new Chunk(customerOrder.getContactNo(), details));
        personal.add(new Paragraph(phone));
        addEmptyLine(personal, 2);
        PdfPTable table = new PdfPTable(2);

        PdfPCell c1 = new PdfPCell(new Phrase("Description", companySlogan));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Cost", companySlogan));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        table.setHeaderRows(1);

        c1 = new PdfPCell(new Phrase(customerOrder.getComment()));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        c1 = new PdfPCell(new Phrase("$ " + customerOrder.getCost()));
        c1.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(c1);

        Paragraph subtotal = new Paragraph("                                                                                SubTotal:                    $ " + customerOrder.getCost());
        subtotal.setAlignment(Element.ALIGN_CENTER);
        Paragraph amountPaid = new Paragraph("                                                                          Amount Paid:                    $ " + customerOrder.getAmountPaid());
        amountPaid.setAlignment(Element.ALIGN_CENTER);
        Paragraph line = new Paragraph("                                                                         ----------------------------------------------");
        line.setAlignment(Element.ALIGN_CENTER);
        Paragraph balance = new Paragraph("                                                                             Total Due:                    $ " + customerOrder.getBalance());
        balance.setAlignment(Element.ALIGN_CENTER);
        addEmptyLine(balance, 2);
        Paragraph pleaseContact = new Paragraph("If you have any questions about this Invoice please don't hesitate to contact us.");
        pleaseContact.setAlignment(Element.ALIGN_CENTER);

        document.add(personal);
        document.add(table);

        document.add(subtotal);
        document.add(amountPaid);
        document.add(line);
        document.add(balance);
        document.add(pleaseContact);
    }

    public void createTable(Section subCatPart)
            throws BadElementException {
        PdfPTable table = new PdfPTable(3);

        // t.setBorderColor(BaseColor.GRAY);
        // t.setPadding(4);
        // t.setSpacing(4);
        // t.setBorderWidth(1);

        PdfPCell c1 = new PdfPCell(new Phrase("Table Header 1"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Table Header 2"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Table Header 3"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        table.setHeaderRows(1);

        table.addCell("1.0");
        table.addCell("1.1");
        table.addCell("1.2");
        table.addCell("2.1");
        table.addCell("2.2");
        table.addCell("2.3");

        subCatPart.add(table);

    }

    public void createList(Section subCatPart) {
        List list = new List(true, false, 10);
        list.add(new ListItem("First point"));
        list.add(new ListItem("Second point"));
        list.add(new ListItem("Third point"));
        subCatPart.add(list);
    }

    public void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}
